SystemDesign Problem statement in detail to refer:
-------------------------------------------------
Practice class diagrams
OOPs concept for class diagrams

JWT
consistent hashing
Indexing
Inverse Indexing
Microservices and communication between them
notification service
Messaging queue
time stamp- how to maintain sequencing as clint time stamp may be unreliable
Class diagram for chess,conv
recommendation system

– Explain design patterns used so far.
– How is code review done.
– How is design review done.
What type of cache do you use in your projects/SYstem.
Using generics
How will you resolved the concurrency issue when 2 customers try to book same seat.

Complete design of my project HLD, LLD, UI, DB etc.

Any big enhancement suggested by you to make your code better.
A running stream of numbers is coming you need to keep track of top K elements
Heap interface and using that implement min heap or max heap. And also write the heapify code
Clone a Binary Tree with Random Pointers

Program for Best Fit algorithm in Memory Management
Design a deck of card (only the model classes)
NoSQL vs a SQL database (when to choose which)

Design Promo Code API taking Amazon’s customer traffic into picture (HLD and LLD was discussed – including in memory databases)
Variation of Topological Sorting : You have been given a set of inter-dependent tasks along with the time taken to execute them. We have more number of parallel processors available than the number of tasks given. There could be multiple starting tasks. There could also be cyclic dependencies. Calculate the minimum time required to complete all the task. Complete end to end production ready code was expected.

Design a vending machine with following functionalities

Three types of Users : User, Operator, Admin
User can select and buy multiple items at a time. Money can be inputted multiple times (you will get the item if there is a time gap > 30 secs). He can also do window shopping (see only the prices of items and buy nothing)
Operator can load the items and mark the items as expired if needed, gets notified if a product goes out of stock.
Admin can own multiple vending machines, he should have a analytics report of the items purchased in a month. He can also change the prices directly and it should reflect in all the vending machines which he owns.
Exception handling in all the edge cases

Design a Whatsapp like service.
Given the high level design first, then dived deeper explaining load balancing, splitting into microservies and communication between them, notification service, message queuing, database sharding, etc.
Asked me how to maintain the sequencing of messages, since client’s time-stamp would be unreliable.

Class diagram for a standalone Chess board game.
Discussion on the my design like, why this class/relationship is needed, why this method is in this class rather than that, etc. Convinced him for few of them, giving proper reasons, and made changes in the design for other few.
Pseudo code for all the possible moves of any piece.

Design:
Do integration for Splitwise app with Amazon Pay (or Paytm)
1) where a person can pay to another person and money directly gets deposited into other person’s bank account.
2) A person can also send reminder to another person for owning money.

Design a job scheduler, scalability, fault tolerance, high availability, how scheduler picks up job,
how will you take care where one job can run for 30 min and one for 30 hour, how will you distribute jobs on servers.
Based on frequency & time how will you execute them ?
How will you notify back the user about start/stop or completion of a job ?
How will your system know if a job is killed / terminated due to unknown reasons ?


.........
Behavioural
-----------
Job Description

Any task/project which was designed and implemented in less time but had a great impact on the production/Business Side.

http://kraftshala.com/how-to-raise-the-bar-in-the-amazon-interview/


........
Google :-
........
Given a result of a competition among all the students of a class, write a program to make students stand in a order such that every student must have lost to the student in his/her immediate left and won against the student to his/her immediate right.
https://www.geeksforgeeks.org/anagram-substring-search-search-permutations/
https://www.geeksforgeeks.org/the-celebrity-problem/
B trees and B+ Trees
AVL tree
hamilton path
Rat in a maze
sudoku
knights tour problem
hamiltonian cycle
m coloring
Robber
np hard problem
Best-First Search.
travelling salesman problem
Reliability design dp
Branch and Bound
QuickSort LinkedList
Row-Major and Column-Major